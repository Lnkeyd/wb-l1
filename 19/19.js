// –î–∞–≤–∞–π —Å–∫–∞–∂–µ–º —á—Ç–æ –Ω—É–∂–µ–Ω —Ç–µ–∫—Å—Ç, –¥–∞—Ç–∞, –∫—Ç–æ –∑–∞–ø–æ–º—Ç–∏–ª, —Ñ–æ—Ç–∫–∞, –ª–∞–π–∫–∏, –∫–æ–º–µ–Ω—Ç—ã

// *** –ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
const MAX_LS = maxLocalStorage();
const ACCESS_TOKEN = localStorage.getItem("vk-app-access");
// –ï—Å–ª–∏ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, —Ç–æ –≤—ã–¥–∞—Å—Ç Too Many Requests Per Second
const COUNT = 3;
// –£–±–∏—Ä–∞–µ–º –ø–æ—Å—Ç –≤ –∑–∞–∫—Ä–µ–ø–µ, —Ç.–∫. —ç—Ç–æ —Å—Ç–∞—Ç—å—è –æ—Ç —Å–∞–º–æ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
let OFFSET = 1;
let SCROLL_Y = 0;
let MAX_POSTS = 100;
const SAFE_RANGE = 0.05;

if (!!JSON.parse(localStorage.getItem("vk-app-offset"))) {
  OFFSET = JSON.parse(localStorage.getItem("vk-app-offset"));
}

if (!!JSON.parse(localStorage.getItem("vk-app-max-posts"))) {
  MAX_POSTS = Number(JSON.parse(localStorage.getItem("vk-app-max-posts")));
}

if (!!localStorage.getItem("vk-app-scrolly") === true) {
  SCROLL_Y = Number(JSON.parse(localStorage.getItem("vk-app-scrolly")));
}

// *** –ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ

// [{element: 'outerHTML', date: date<number>}]
// –°–æ—Ä—Ç–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤ –∫–∞–∂–¥—ã–π —Ä–∞–∑, —Ç.–∫. –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –æ—á–µ—Ä—ë–¥–Ω–æ—Å—Ç—å —Å—Ä–∞–∑—É
function pushToLS(object) {
  const prevArr = JSON.parse(localStorage.getItem("vk-app-posts"));

  if (prevArr) {
    localStorage.setItem(
      "vk-app-posts",
      JSON.stringify([...prevArr, object].sort((a, b) => b.date - a.date))
    );
  } else {
    localStorage.setItem("vk-app-posts", JSON.stringify([object]));
  }
}

async function getFromLS(posts) {
  await posts.map((item) => {
    const postEl = document.createElement("div");
    postEl.classList.add("post-item");
    postEl.innerHTML = item.element;
    document.querySelector(".posts").append(postEl);
  });
  document.querySelector(".posts").scrollTop = SCROLL_Y;
}

function sliceLS() {
  const lsArr = JSON.parse(localStorage.getItem("vk-app-posts"));
  const newLSArr = lsArr.slice(3);
  localStorage.setItem("vk-app-posts", JSON.stringify(newLSArr));
}

// **** –£—Ç–∏–ª–∏—Ç–∞—Ä–Ω—ã–µ —Ñ-—Ü–∏–∏
function convertTime(ms) {
  const date = new Date(ms * 1000);

  const hours = date.getHours();
  const minutes = "0" + date.getMinutes();

  // –í—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ 10:30:23
  const formattedTime =
    date.toLocaleDateString() + " " + hours + ":" + minutes.substr(-2);

  return formattedTime;
}

function throttle(fn, delay) {
  let run = true;
  return (...args) => {
    if (run) {
      fn(...args);
      run = false;
      setTimeout(() => {
        run = true;
      }, delay);
    }
  };
}

function maxLocalStorage() {
  let size = "‚õ≥";
  try {
    // –°–µ—Ç–∏–º —Å–≤–æ–π—Å—Ç–≤–æ –≤ LS –∏ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ, –∞ —Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ, –∏ –ø–∞–º—è—Ç—å –Ω–∞ –µ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏–µ
    while (true) {
      localStorage.setItem("a", size);
      size += size;
    }
  } catch (e) {
    // –ï—Å–ª–∏ –≤—ã–±—å–µ—Ç –æ—à–∏–±–∫—É –ø—Ä–∏ –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏–∏, —Ç–æ –≤—ã–≤–æ–¥–∏–º —Ä–∞–∑–º–µ—Ä
    // –î–≤–∞–∂–¥—ã –¥–µ–ª–∏–º –Ω–∞ 1024, –ø–æ—Ç–æ–º—É —á—Ç–æ –¥–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ `utf-16`, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–Ω–∏–º–∞–µ—Ç 2 –±–∞–π—Ç–∞ –Ω–∞ —Å–∏–º–≤–æ–ª
    // –£–∑–Ω–∞—ë–º —Ä–∞–∑–º–µ—Ä –≤ –ú–ë

    localStorage.removeItem("a");
    return (size.length * 2) / (1024 * 1024);
  }
}

function sizeLocalStorage() {
  const lsContent = localStorage.getItem("vk-app-posts");
  return (lsContent.length * 2) / (1024 * 1024);
}

// **** –ö–æ–Ω–µ—Ü —É—Ç–∏–ª–∏—Ç–∞—Ä–Ω—ã—Ö —Ñ-—Ü–∏–π

const posts = document.querySelector(".posts");
posts.addEventListener("scroll", throttle(checkPosition, 300));
posts.addEventListener("resize", throttle(checkPosition, 300));

const params = {
  client_id: 51778161,
  redirect_uri: "http://127.0.0.1:5500/19/auth.html",
  token_uri: "https://oauth.vk.com/blank.html",
  owner_id: -45407805,
};

if (!ACCESS_TOKEN) authUser();
function authUser() {
  window.location = `https://oauth.vk.com/authorize?client_id=${params.client_id}&redirect_uri=${params.redirect_uri}&display=popup&response_type=token&scope=offline&v=5.154`;
}

const LS_POSTS = localStorage.getItem("vk-app-posts");
//   –ï—Å–ª–∏ –µ—Å—Ç—å —É–∂–µ –ø–æ—Å—Ç—ã, —Ç–æ –ø–æ–¥–≥—Ä—É–∂–∞–µ–º –∏—Ö
if (LS_POSTS) {
  getFromLS(JSON.parse(LS_POSTS));
} else {
  // –ó–¥–µ—Å—å –∫ –∫–æ–ª–±—ç–∫ —Å–∫—Ä–∏–ø—Ç–∞ –ø–µ—Ä–µ–¥–∞—ë—Ç —Ñ-—é createPosts, —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å—Ç–∏—Ç –µ—ë —á–µ—Ä–µ–∑ JSONP
  fetchPosts();
}

function fetchPosts() {
  var script = document.createElement("SCRIPT");
  script.id = `fetch-script`;
  script.src = `https://api.vk.com/method/wall.get?v=5.154&access_token=${ACCESS_TOKEN}&owner_id=${params.owner_id}&count=${COUNT}&offset=${OFFSET}&callback=createPosts`;
  document.getElementsByTagName("head")[0].appendChild(script);
}

async function createPosts(result) {
  document.getElementById(`fetch-script`).remove();
  localStorage.setItem("vk-app-max-posts", JSON.parse(result.response?.count));
  MAX_POSTS = result.response?.count;
  if (OFFSET + COUNT >= MAX_POSTS) return;

  OFFSET += COUNT;
  localStorage.setItem("vk-app-offset", JSON.stringify(OFFSET));

  // –§–ª–æ—É —Ç–∞–∫–æ–π:
  // 1) –ù–∞—Ö–æ–¥–∏–º –ò–º—è + –§–∞–º–∏–ª–∏—è –ø–æ id, —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞–µ—Ç –∫–æ–ª–±—ç–∫ getUsername
  // 2) –ù–∞—à –ø–æ—Ç–æ–∫ –Ω–µ –∂–¥—ë—Ç –µ—ë (–Ω–µ –Ω–∞—à—ë–ª —Ç–∞–∫–æ–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏) –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç —Å—Ä–∞–∑—É –∂–µ —Ñ-—é postCreator
  // 3) –ö–∞–∫ —Ç–æ–ª—å–∫–æ postCreator –æ—Ç—Ä–∞–±–æ—Ç–∞–ª–∞, –ø–æ—Å–ª–µ –Ω–µ—ë (–≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –≤ –∫–æ–ª—Å—Ç—ç–∫–µ) –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è —Ñ-—è getUsername
  // 4) –§-—è getUsername –¥–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –∫–æ–Ω—Ç–µ–Ω—Ç —Å–æ–∑–¥–∞—Ç–µ–ª—è —Å–≤–µ–∂–µ—Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–æ–º postCreator –ø–æ—Å—Ç–∞

  if (
    !!localStorage.getItem("vk-app-posts") &&
    sizeLocalStorage() + SAFE_RANGE >= 0.2 // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å —Ä–∞–∑–º–µ—Ä localStorage
  )
    sliceLS();

  await result.response?.items.forEach((element) => {
    postCreator(element);
    utilScriptResults(element.signer_id);
  });

  console.log(
    `–û–±—ä—ë–º –∑–∞–Ω—è—Ç–æ–π –ø–∞–º—è—Ç–∏: ${sizeLocalStorage() + ' MB'} / –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ö—Ä–∞–Ω–∏–ª–∏—â–∞: ${maxLocalStorage() + ' MB'}`
  );
}

async function utilScriptResults(param) {
  var script = document.createElement("SCRIPT");
  script.id = `util-script-${param}`;
  script.src = `https://api.vk.com/method/users.get?v=5.154&access_token=${ACCESS_TOKEN}&user_ids=${param}&callback=getUsername`;

  document.getElementsByTagName("head")[0].appendChild(script);
}

async function getUsername(result) {
  try {
    const id = await result?.response[0].id;
    const user = await result?.response[0];
    // –î–æ—Å—Ç–∞—ë–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –≤ –∫–ª–∞—Å—Å–µ, –ø–æ—Ç–æ–º—É —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –ø–æ—Å—Ç–∏—Ç—å
    // –≤ –ø–∞–±–ª–∏–∫ –º–Ω–æ–≥–æ –ø–æ—Å—Ç–æ–≤
    const element = await Array.from(
      document.querySelectorAll(`.user-${id}`)
    ).pop();
    element.textContent = user.first_name + " " + user.last_name;

    //    –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏–µ localStorage

    // –ï—Å–ª–∏ –≥—Ä—É–∑–∏–º –Ω–æ–≤—ã–π —á–∞–Ω–∫, —Ç–æ —Å–µ—Ç—Ç–∏–º –µ–≥–æ –≤ LS
    // ...
    pushToLS({
      element: element.parentElement.innerHTML,
      date: Number(element.nextElementSibling.id),
    });
    document.getElementById(`util-script-${user.id}`).remove();
    // –ö–∞–∂–¥—ã–π —Ä–∞–∑ –ø–æ—Å–ª–µ –ø—É—à–∞ —Å–æ—Ä—Ç–∏–º –º–∞—Å—Å–∏–≤, –ø–æ—Ç–æ–º—É —á—Ç–æ –Ω–µ—Ç –≥–∞—Ä–∞–Ω—Ç–∏–∏, —á—Ç–æ –º—ã –±—É–¥–µ–º –∏–º–µ—Ç—å –Ω—É–∂–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫
    // (–ø—Ä–æ–≤–µ—Ä–µ–Ω–æ —Ç–µ—Å—Ç–∞–º–∏)
  } catch (e) {
    console.error(e);
    // console.error(
    //   "getUserName" +
    //     " " +
    //     user.id +
    //     " " +
    //     user.first_name +
    //     " " +
    //     user.last_name
    // );
  }
}

async function postCreator(post) {
  const postEl = document.createElement("div");
  postEl.classList.add("post-item");

  postEl.id = `post-${post.signer_id}`;
  postEl.innerHTML = `
        <div class="post-item__username user-${post.signer_id}"></div>
        <div id="${post.date}" class="post-item__date">${convertTime(
    post.date
  )}</div>
        <div class="post-item__text">${post.text}</div>
        <div class="post-item-photos">
        ${post.attachments
          .map((item) => `<img src="${item.photo.sizes[2].url}"/>`)
          .join("")}
        </div>
        <div class="post-item-info">
            <div class="post-item-info__likes">
            ‚ù§Ô∏è: <span class="likes__count">${post.likes.count}</span>
            </div>
            <div class="post-item-info__comments">
            üí¨: <span class="comments__count">${post.comments.count}</span>
            </div>
        </div>
    `;

  document.querySelector(".posts").append(postEl);
}

// –°–ø—Ä–∞–≤–æ—á–Ω—ã–π —Ä–µ—Å—É—Ä—Å –ø–æ —Ç–µ–º–µ:
// https://doka.guide/js/infinite-scroll/
function checkPosition() {
  // –ù–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –∑–Ω–∞—Ç—å –≤—ã—Å–æ—Ç—É –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏ –≤—ã—Å–æ—Ç—É —ç–∫—Ä–∞–Ω–∞:
  const posts = document.querySelector(".posts");

  //   max-height –±–ª–æ–∫–∞
  const height = posts.offsetHeight;
  //   –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞, –µ—Å–ª–∏ –ø—Ä–æ—Å–∫—Ä–æ–ª–∏—Ç—å –µ–≥–æ –¥–æ –∫–æ–Ω—Ü–∞
  //   –û–Ω–∞ –±—É–¥–µ—Ç –±–æ–ª—å—à–µ, —Ç.–∫. —Å—Ç–æ–∏—Ç overflowY: scroll
  const screenHeight = posts.scrollHeight;
  SCROLL_Y = screenHeight;

  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º, —Å–∫–æ–ª—å–∫–æ –ø–∏–∫—Å–µ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø—Ä–æ—Å–∫—Ä–æ–ª–ª–∏–ª:
  const scrolled = posts.scrollTop;
  localStorage.setItem("vk-app-scrolly", JSON.stringify(scrolled));

  // –û–±–æ–∑–Ω–∞—á–∏–º –ø–æ—Ä–æ–≥, –ø–æ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–∏ –∫ –∫–æ—Ç–æ—Ä–æ–º—É
  // –±—É–¥–µ–º –≤—ã–∑—ã–≤–∞—Ç—å –∫–∞–∫–æ–µ-—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ.
  // –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ ‚Äî –∑–∞ 2 –ø–æ—Å—Ç–∞ –¥–æ –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:
  const threshold = screenHeight - height * 2 + 100;

  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º, –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∏–∑ —ç–∫—Ä–∞–Ω–∞ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:
  const position = scrolled;

  if (position >= threshold) {
    // –ï—Å–ª–∏ –±–æ–ª—å—à–µ –Ω–µ—Ç –ø–æ—Å—Ç–æ–≤, —Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
    if (OFFSET + COUNT >= MAX_POSTS) return;
    if (SCROLL_Y <= Number(JSON.parse(localStorage.getItem("vk-app-scrolly"))))
      return;
    // –ï—Å–ª–∏ –º—ã –ø–µ—Ä–µ—Å–µ–∫–ª–∏ –ø–æ–ª–æ—Å—É-–ø–æ—Ä–æ–≥, –≤—ã–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ.
    fetchPosts();
  }
}
